<?php
	session_start();
	
	class Login
	{

		public static $userLevel;
		private $folder;
		private $templateSection;//Parte de la plantilla que se debe traducir de acuerdo al nivel de usuario

		public function __construct( $default = 0 ) {
			
			//Si se establecio el nivel de acceso
			if( isset( $_SESSION[ 'user-level' ] ) ) {
				self::$userLevel = $_SESSION[ 'user-level' ];

			} else {
				self::$userLevel = $default;
			}
		}//end __construct


		//************************************************************************************************


		public function existAccount( $table, $colsTable, $datosComparar, $datosRecoger = '*' ) {

			if( sizeof( $colsTable ) > 0 AND sizeof( $datosComparar ) > 0 ) {
				$i = 0;//se declara fuera para poder usar break, para que coincidan las posiciones de $colsTable con $datosComparar

				foreach ( $colsTable as $a ) {

					while( $i < sizeof( $datosComparar ) ) {
						if( $i == 0 ) {
							$where = $a." = '".$datosComparar[ $i ]."'";

						} else {					
							$where = $where." AND ".$a." = '".$datosComparar[ $i ]."'";

						}//end if..else

						$i++;//se aumenta una posicion
						break;//se sale del flujo de control del while y el flujo regresa a colstable

					}//end while

				}//end foreach

			} else {
				return false;

			}//end if..else
			
			//Si no hay registros, retorna false
			if( Work::getCountRegisters( $table, $colsTable[ 0 ], $where ) == 0 ) {
				return false;

			} else {//Si No

				//Crea el query
				Work::$query = "SELECT ".$datosRecoger." FROM ".$table.
					" WHERE ".$where;

				//Realiza la consulta
				if( $result = Work::$mysqli->query( Work::$query ) )
					$register = $result->fetch_assoc();

				//Retorna el registro
				return $register;

			}//end if...else
			
		}//end existAccount
		

		//***********************************************************************

		//Recibe como parametro el nombre del shtml guardado
		public function startTranslateByLevel( $forTranslate ) {

			$url = 'client/html/master/userBar/level/'.'L'.self::$userLevel.'/'.$forTranslate.'Level.html';

			$this->templateSection = file_get_contents( $url );

			return $this->templateSection;

		}//end startTranslateByLevel


		public function setFolder( $direction ) {
			$this->folder = $direction;
		}
		
	}//end Login

?>
